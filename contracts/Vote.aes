contract Vote =

   record candidates = {
      voters: list(address) }

   record state = {
      votes: map(address, candidates) }

   public stateful function init() = {
      votes = { } }

   public stateful function vote(candidate: address) : bool =
      let new_votes_state = Call.caller :: state.votes[candidate].voters
      put(state{
         votes[candidate].voters = new_votes_state })
      true

   public function count_votes(candidate : address) : int =
      size(state.votes[candidate].voters)  

   private function size(l : list('a)) : int = size'(l, 0)
   
   private function size'(l : list('a), x : int) : int =
      switch(l)
         [] => x
         _ :: l' => size'(l', x + 1)

   public stateful function add_candidate(candidate: address) : bool =
      put(state{
         votes[candidate] = { voters = [] } })
      true